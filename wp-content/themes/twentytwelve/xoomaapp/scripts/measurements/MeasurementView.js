// Generated by CoffeeScript 1.8.0
(function() {
  var ProfileMeasurementsView,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ProfileMeasurementsView = (function(_super) {
    var valueOutput;

    __extends(ProfileMeasurementsView, _super);

    function ProfileMeasurementsView() {
      this.onPauseSessionClick = __bind(this.onPauseSessionClick, this);
      return ProfileMeasurementsView.__super__.constructor.apply(this, arguments);
    }

    ProfileMeasurementsView.prototype.template = '#profile-measurements-template';

    ProfileMeasurementsView.prototype.className = 'animated fadeIn';

    ProfileMeasurementsView.prototype.onShow = function() {
      var $document, $element, i, selector;
      $("#element1").popover({
        html: true
      });
      $("#element2").popover({
        html: true
      });
      $("#element3").popover({
        html: true
      });
      $("#element4").popover({
        html: true
      });
      $("#element5").popover({
        html: true
      });
      $("#element6").popover({
        html: true
      });
      $("#element7").popover({
        html: true
      });
      $("#element8").popover({
        html: true
      });
      $document = $(document);
      selector = '[data-rangeslider]';
      $element = $(selector);
      i = $element.length - 1;
      while (i >= 0) {
        valueOutput($element[i]);
        i--;
      }
      $document.on('change', 'input[type="range"]', function(e) {
        return valueOutput(e.target);
      });
      $element.rangeslider({
        polyfill: false,
        onSlide: function(position, value) {
          console.log('onSlide');
          return console.log('position: ' + position, 'value: ' + value);
        },
        onSlideEnd: function(position, value) {
          console.log('onSlideEnd');
          return console.log('position: ' + position, 'value: ' + value);
        }
      });
      return $("#add_measurements").validate({
        submitHandler: function(form) {
          $.ajax({
            method: 'POST',
            url: _SITEURL + '/wp-json/measurements/2',
            data: $('#add_measurements').serialize(),
            success: function(response) {
              console.log(response);
              if (response.status === 404) {
                return $('.response_msg').text("Something went wrong");
              } else {
                return $('.response_msg').text("User details saved successfully");
              }
            },
            error: function(error) {
              return $('.response_msg').text("Something went wrong");
            }
          });
          return false;
        }
      });
    };

    valueOutput = function(element) {
      var output, value;
      value = element.value;
      output = element.parentNode.getElementsByTagName("output")[0];
      output.innerHTML = value;
    };

    ProfileMeasurementsView.prototype.onPauseSessionClick = function() {
      console.log('Invoked onPauseSessionClick');
      Backbone.history.history.back();
      return document.removeEventListener("backbutton", this.onPauseSessionClick, false);
    };

    ProfileMeasurementsView.prototype.cordovaEventsForModuleDescriptionView = function() {
      navigator.app.overrideBackbutton(true);
      document.addEventListener("backbutton", this.onPauseSessionClick, false);
      return document.addEventListener("pause", this.onPauseSessionClick, false);
    };

    return ProfileMeasurementsView;

  })(Marionette.ItemView);

}).call(this);
