// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

App.ProductListCtrl = (function(_super) {
  __extends(ProductListCtrl, _super);

  function ProductListCtrl() {
    this.successHandler = __bind(this.successHandler, this);
    return ProductListCtrl.__super__.constructor.apply(this, arguments);
  }

  ProductListCtrl.prototype.initialize = function() {
    this.productList = this._get_products();
    return this.show(new ProductListView);
  };

  ProductListCtrl.prototype._get_products = function() {
    return $.ajax({
      method: 'GET',
      url: "" + _SITEURL + "/wp-json/products",
      success: this.successHandler,
      error: this.errorHandler
    });
  };

  ProductListCtrl.prototype.successHandler = function(response, status, responsecode) {
    var newProducts;
    if (responsecode.status === 200) {
      return newProducts = this._get_new_products(response);
    }
  };

  ProductListCtrl.prototype._get_new_products = function(response) {
    var productIds;
    productIds = [];
    $.each(response, function(index, value) {
      return productIds.push(parseInt(value.id));
    });
    return console.log(productIds);
  };

  return ProductListCtrl;

})(Marionette.RegionController);
