// Generated by CoffeeScript 1.8.0
(function() {
  _.mixin({
    setNotificationTime: function() {
      var current_time, date, dateValue, getNotificationTime, laterDate, scheduledTime, timeDifference, time_for_notification, time_selected, today;
      current_time = moment().format("HH:mm");
      getNotificationTime = $("#timeupdate").val();
      time_selected = moment(getNotificationTime, "HH:mm").format("HH:mm");
      today = new Date();
      date = "" + (today.getFullYear()) + "-" + (today.getMonth() + 1) + "-" + (today.getDate());
      laterDate = moment(date + " " + getNotificationTime);
      dateValue = laterDate.toDate();
      scheduledTime = dateValue.getTime();
      timeDifference = moment(current_time, "HH:mm").diff(moment(time_selected, "HH:mm"));
      if (timeDifference <= 0) {
        time_for_notification = new Date(scheduledTime);
        window.plugin.notification.local.add({
          id: '3',
          title: "Xooma Track & Go",
          message: 'Time Scheduled Gear up xooma time! ',
          date: time_for_notification
        });
      } else {
        alert("Select a valid time");
      }
    },
    notificationCall: function(id) {
      var badgeValue, scheduledTimeAfterEverySec, _60_seconds_from_now;
      if (id === '1') {
        badgeValue = window.plugin.notification.local.getDefaults().badge;
      } else {
        badgeValue = window.plugin.notification.local.getDefaults().badge;
      }
      scheduledTimeAfterEverySec = new Date().getTime();
      _60_seconds_from_now = new Date(scheduledTimeAfterEverySec + 60 * 1000);
      window.plugin.notification.local.add({
        id: id,
        autoCancel: true,
        title: "Xooma Track & Go for product" + id + "",
        message: 'Gear up xooma time!',
        badge: badgeValue,
        date: _60_seconds_from_now
      });
      window.plugin.notification.local.ontrigger = function(id, state, json) {
        var badge;
        console.log("ontrigger");
        badgeValue = badgeValue + 1;
        badge = {
          badge: badgeValue
        };
        return window.plugin.notification.local.setDefaults(badge);
      };
    }
  });

}).call(this);
