// Generated by CoffeeScript 1.7.1
(function() {
  var LoginView,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  LoginView = (function(_super) {
    __extends(LoginView, _super);

    function LoginView() {
      this.loginWithFacebook = __bind(this.loginWithFacebook, this);
      return LoginView.__super__.constructor.apply(this, arguments);
    }

    LoginView.prototype.template = '#login-template';

    LoginView.prototype.initialize = function(opts) {
      return LoginView.__super__.initialize.call(this, opts);
    };

    LoginView.prototype.ui = {
      fbLoginButton: '.f-login-button'
    };

    LoginView.prototype.events = {
      'click @ui.fbLoginButton': 'loginWithFacebook'
    };

    LoginView.prototype.loginWithFacebook = function(evt) {
      return FB.login((function(_this) {
        return function(response) {
          if (response.authResponse) {
            return FB.api('/me', function(user) {
              return _this.triggerMethod('facebook:login:success', user, response.authResponse.accessToken);
            });
          } else {
            return _this.triggerMethod('facebook:login:cancel');
          }
        };
      })(this), {
        scope: 'email'
      });
    };

    return LoginView;

  })(Marionette.ItemView);

  App.LoginCtrl = (function(_super) {
    __extends(LoginCtrl, _super);

    function LoginCtrl() {
      return LoginCtrl.__super__.constructor.apply(this, arguments);
    }

    LoginCtrl.prototype.initialize = function() {
      var loginView;
      loginView = new LoginView;
      this.listenTo(loginView, 'facebook:login:success', this._facebookAuthSuccess);
      this.listenTo(loginView, 'facebook:login:cancel', this._facebookAuthCancel);
      return this.show(loginView);
    };

    LoginCtrl.prototype._facebookAuthSuccess = function() {
      var args, _ref;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return (_ref = App.currentUser).authenticate.apply(_ref, ['facebook'].concat(__slice.call(args)));
    };

    LoginCtrl.prototype._facebookAuthCancel = function() {
      return App.currentUser.trigger('user:auth:cancel');
    };

    return LoginCtrl;

  })(Ajency.LoginCtrl);

  jQuery(document).ready(function($) {
    App.state('login').state('xooma', {
      url: '/'
    }).state('profile', {
      url: '/profile',
      parent: 'xooma'
    }).state('ProfilePersonalInfo', {
      url: '/personal-info',
      parent: 'profile'
    }).state('profileMeasurement', {
      url: '/measurements',
      ctrl: 'ProfileMeasurementsCtrl',
      parent: 'profile'
    }).state('settings', {
      url: '/settings',
      parent: 'xooma'
    });
    App.addInitializer(function() {
      Backbone.history.start();
      return App.currentUser.on('user:auth:success', function() {
        return App.navigate('/profile', true);
      });
    });
    return App.start();
  });

}).call(this);
